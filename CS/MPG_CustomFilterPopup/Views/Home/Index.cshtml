
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<script type="text/javascript">
    function ApplyFilter(values) {
        PivotGrid.PerformCallback({ FieldID: gvFilterItems.cpFieldID, Values: values });

    }
    function ClosePopupWindow() {
        PopupControl.HideWindow();
        gvFilterItems.PerformCallback({ Action: 'Close' });
    }
    function onCustomFilterClick(s, id, caption) {
        var rects = s.getClientRects();
        gvFilterItems.PerformCallback({Action: 'Show', FieldID: id });
        PopupControl.ShowAtPos(rects[0].left, rects[0].bottom);
        PopupControl.SetHeaderText(caption + "Filter");
    }

    function onOkButtonClick() {
        gvFilterItems.GetSelectedFieldValues("Value", ApplyFilter);
        ClosePopupWindow();
    }

    function onCancelButtonClick() {
        ClosePopupWindow();
    }

    function onInvertButtonClick() {
        gvFilterItems.PerformCallback({ Action: 'Invert' });
    }
</script>



@Html.DevExpress().PopupControl(settings => {
    settings.Name = "PopupControl";
    settings.AllowResize = true;
    settings.ShowHeader = true;
    settings.ShowOnPageLoad = false;
    settings.AllowDragging = true;
    settings.CloseAction = CloseAction.OuterMouseClick;
    settings.CloseOnEscape = false;
    settings.Modal = true;


    settings.SetContent(() => {
        Html.RenderAction("GVFilterItemsPartial");
        Html.DevExpress().Button(bs => {
            bs.Name = "bInvert";
            bs.Text = "Invert";
            bs.ClientSideEvents.Click = "onInvertButtonClick";
        }).Render();
        Html.DevExpress().Button(bs => {
            bs.Name = "bOk";
            bs.Text = "Ok";
            bs.ClientSideEvents.Click = "onOkButtonClick";
        }).Render();
        Html.DevExpress().Button(bs => {
            bs.Name = "bCancel";
            bs.Text = "Cancel";
            bs.ClientSideEvents.Click = "onCancelButtonClick";
        }).Render();
    });
}).GetHtml()

@Html.Action("PivotGridPartial")